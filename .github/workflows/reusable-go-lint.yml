name: Lint Go Code

on:
  workflow_call:
    inputs:
      go-version:
        required: false
        type: string
        default: "1.24"
        description: "Go version to use"
      working-directory:
        required: true
        type: string
        description: "Working directory for the Go project"
      golangci-lint-version:
        required: false
        type: string
        default: "latest"
        description: "golangci-lint version to use"
      use-container:
        required: false
        type: boolean
        default: true
        description: "Whether to use CI container"
  workflow_dispatch:
    inputs:
      go-version:
        required: false
        type: string
        default: "1.24"
        description: "Go version to use"
      working-directory:
        required: true
        type: string
        description: "Working directory for the Go project"
      golangci-lint-version:
        required: false
        type: string
        default: "latest"
        description: "golangci-lint version to use"
      use-container:
        required: false
        type: boolean
        default: true
        description: "Whether to use CI container"

jobs:
  lint:
    runs-on: ubuntu-latest
    container: ${{ inputs.use-container && 'ghcr.io/the78mole/jumpstarter-mono/ci-go:latest' || null }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go (if not using container)
        if: ${{ !inputs.use-container }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go-version }}

      - name: Configure Git for VCS stamping
        if: ${{ inputs.use-container }}
        run: |
          git config --global --add safe.directory "$(pwd)"
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ inputs.golangci-lint-version }}
          working-directory: ${{ inputs.working-directory }}
          args: --timeout=5m
