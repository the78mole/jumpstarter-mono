# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import client_pb2 as jumpstarter_dot_client_dot_v1_dot_client__pb2


class ClientServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetExporter = channel.unary_unary(
                '/jumpstarter.client.v1.ClientService/GetExporter',
                request_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.GetExporterRequest.SerializeToString,
                response_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.Exporter.FromString,
                _registered_method=True)
        self.ListExporters = channel.unary_unary(
                '/jumpstarter.client.v1.ClientService/ListExporters',
                request_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.ListExportersRequest.SerializeToString,
                response_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.ListExportersResponse.FromString,
                _registered_method=True)
        self.GetLease = channel.unary_unary(
                '/jumpstarter.client.v1.ClientService/GetLease',
                request_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.GetLeaseRequest.SerializeToString,
                response_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.Lease.FromString,
                _registered_method=True)
        self.ListLeases = channel.unary_unary(
                '/jumpstarter.client.v1.ClientService/ListLeases',
                request_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.ListLeasesRequest.SerializeToString,
                response_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.ListLeasesResponse.FromString,
                _registered_method=True)
        self.CreateLease = channel.unary_unary(
                '/jumpstarter.client.v1.ClientService/CreateLease',
                request_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.CreateLeaseRequest.SerializeToString,
                response_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.Lease.FromString,
                _registered_method=True)
        self.UpdateLease = channel.unary_unary(
                '/jumpstarter.client.v1.ClientService/UpdateLease',
                request_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.UpdateLeaseRequest.SerializeToString,
                response_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.Lease.FromString,
                _registered_method=True)
        self.DeleteLease = channel.unary_unary(
                '/jumpstarter.client.v1.ClientService/DeleteLease',
                request_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.DeleteLeaseRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ClientServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetExporter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExporters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLease(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLeases(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLease(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLease(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLease(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetExporter': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExporter,
                    request_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.GetExporterRequest.FromString,
                    response_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.Exporter.SerializeToString,
            ),
            'ListExporters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExporters,
                    request_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.ListExportersRequest.FromString,
                    response_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.ListExportersResponse.SerializeToString,
            ),
            'GetLease': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLease,
                    request_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.GetLeaseRequest.FromString,
                    response_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.Lease.SerializeToString,
            ),
            'ListLeases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLeases,
                    request_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.ListLeasesRequest.FromString,
                    response_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.ListLeasesResponse.SerializeToString,
            ),
            'CreateLease': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLease,
                    request_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.CreateLeaseRequest.FromString,
                    response_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.Lease.SerializeToString,
            ),
            'UpdateLease': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLease,
                    request_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.UpdateLeaseRequest.FromString,
                    response_serializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.Lease.SerializeToString,
            ),
            'DeleteLease': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLease,
                    request_deserializer=jumpstarter_dot_client_dot_v1_dot_client__pb2.DeleteLeaseRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'jumpstarter.client.v1.ClientService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('jumpstarter.client.v1.ClientService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ClientService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetExporter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/jumpstarter.client.v1.ClientService/GetExporter',
            jumpstarter_dot_client_dot_v1_dot_client__pb2.GetExporterRequest.SerializeToString,
            jumpstarter_dot_client_dot_v1_dot_client__pb2.Exporter.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListExporters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/jumpstarter.client.v1.ClientService/ListExporters',
            jumpstarter_dot_client_dot_v1_dot_client__pb2.ListExportersRequest.SerializeToString,
            jumpstarter_dot_client_dot_v1_dot_client__pb2.ListExportersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/jumpstarter.client.v1.ClientService/GetLease',
            jumpstarter_dot_client_dot_v1_dot_client__pb2.GetLeaseRequest.SerializeToString,
            jumpstarter_dot_client_dot_v1_dot_client__pb2.Lease.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListLeases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/jumpstarter.client.v1.ClientService/ListLeases',
            jumpstarter_dot_client_dot_v1_dot_client__pb2.ListLeasesRequest.SerializeToString,
            jumpstarter_dot_client_dot_v1_dot_client__pb2.ListLeasesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateLease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/jumpstarter.client.v1.ClientService/CreateLease',
            jumpstarter_dot_client_dot_v1_dot_client__pb2.CreateLeaseRequest.SerializeToString,
            jumpstarter_dot_client_dot_v1_dot_client__pb2.Lease.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateLease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/jumpstarter.client.v1.ClientService/UpdateLease',
            jumpstarter_dot_client_dot_v1_dot_client__pb2.UpdateLeaseRequest.SerializeToString,
            jumpstarter_dot_client_dot_v1_dot_client__pb2.Lease.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteLease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/jumpstarter.client.v1.ClientService/DeleteLease',
            jumpstarter_dot_client_dot_v1_dot_client__pb2.DeleteLeaseRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
