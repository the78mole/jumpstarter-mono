# Pre-commit configuration for Jumpstarter Monorepo
repos:
  # Standard pre-commit hooks for general file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(core/jumpstarter/packages/jumpstarter-protocol/|core/protocol/)
      - id: end-of-file-fixer
        exclude: ^(core/jumpstarter/packages/jumpstarter-protocol/|core/protocol/)
      - id: check-yaml
        exclude: ^(core/jumpstarter/packages/jumpstarter-protocol/|core/protocol/|integrations/tekton/examples/jumpstarter-tekton-jumpstarter-e2e-example-usage/|.*templates/.*\.yaml|mkdocs\.yml|lab-config/example/vars\.yaml)
      - id: check-toml
      - id: check-json
        exclude: ^(core/jumpstarter/packages/jumpstarter-protocol/|core/protocol/|\.vscode/|.*json-error\.json)
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-executables-have-shebangs
        exclude: ^(core/jumpstarter/packages/jumpstarter-protocol/|core/protocol/|hardware/dutlink-firmware/.*\.rs)
      - id: check-shebang-scripts-are-executable
        exclude: ^(hardware/dutlink-firmware/.*\.rs)

  # Typos checking
  - repo: https://github.com/crate-ci/typos
    rev: v1.28.3
    hooks:
      - id: typos
        exclude: ^(core/controller/internal/authorization/metadata_test\.go|core/controller/\.goreleaser\.yaml)

  # Go formatting and imports
  - repo: https://github.com/dnephin/pre-commit-golang
    rev: v0.5.1
    hooks:
      - id: go-fmt
        files: ^(core/controller/|lab-config/).*\.go$
      - id: go-imports
        files: ^(core/controller/|lab-config/).*\.go$
      - id: go-mod-tidy
        files: ^(core/controller/|lab-config/).*\.go$

  # Python code formatting and linting with ruff
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.8
    hooks:
      - id: ruff
      - id: ruff-format

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        exclude: ^(core/jumpstarter/packages/jumpstarter-protocol/|core/protocol/)

  # Docker linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: Lint Dockerfiles
        exclude: ^(core/jumpstarter/packages/jumpstarter-protocol/|core/protocol/)
        args:
          [
            "--ignore",
            "DL3045",
            "--ignore",
            "DL3059",
            "--ignore",
            "DL3007",
            "--ignore",
            "DL3041",
            "--ignore",
            "DL3040",
            "--ignore",
            "DL3020",
          ]

  # Prettier for various file formats
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        exclude: ^(core/jumpstarter/packages/jumpstarter-protocol/|core/protocol/|\.vscode/|.*templates/.*\.yaml|.*json-error\.json)
        files: \.(js|ts|jsx|tsx|css|scss|html|json|md)$

  # Python security linting with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        exclude: ^(core/jumpstarter/packages/jumpstarter-protocol/|core/protocol/|.*test.*\.py|.*_test\.py|tests/.*\.py|.*/tests/.*\.py|.*examples/.*\.py)$
        args:
          [
            "-ll",
            "-x",
            "*test*,*_test.py,test_*",
            "--skip",
            "B104,B108,B113,B324,B610",
          ]

  # Additional local tools
  - repo: local
    hooks:
      - id: go-lint
        name: Go lint (optional)
        language: system
        entry: sh -c 'if command -v golangci-lint >/dev/null 2>&1; then golangci-lint run --modules-download-mode=readonly; else echo "golangci-lint not available, skipping"; exit 0; fi'
        files: ^(core/controller/|lab-config/).*\.go$
        pass_filenames: false
      - id: go-vet
        name: Go Vet
        language: system
        entry: sh -c 'if command -v go >/dev/null 2>&1; then cd core/controller && go vet ./...; cd ../../lab-config && go vet ./...; else echo "go not available, skipping"; exit 0; fi'
        files: ^(core/controller/|lab-config/).*\.go$
        pass_filenames: false
      - id: cargo-fmt
        name: cargo fmt (optional)
        entry: sh -c 'if command -v cargo >/dev/null 2>&1 && cargo fmt --version >/dev/null 2>&1; then cd hardware/dutlink-firmware/application && cargo fmt --check && cd ../bootloader && cargo fmt --check; else echo "cargo fmt not available, skipping"; exit 0; fi'
        language: system
        files: ^hardware/dutlink-firmware/.*\.rs$
        pass_filenames: false
      - id: cargo-clippy
        name: cargo clippy (optional)
        entry: sh -c 'if command -v cargo >/dev/null 2>&1 && cargo clippy --version >/dev/null 2>&1; then cd hardware/dutlink-firmware/application && cargo clippy --all-targets --all-features && cd ../bootloader && cargo clippy --all-targets --all-features; else echo "cargo clippy not available, skipping"; exit 0; fi'
        language: system
        files: ^hardware/dutlink-firmware/.*\.rs$
        pass_filenames: false
