# Build the manager binary
FROM registry.access.redhat.com/ubi9/go-toolset:1.24 AS builder
ARG TARGETOS
ARG TARGETARCH

WORKDIR /workspace
# Copy the Go Modules manifests from lab-config directory
COPY lab-config/go.mod go.mod
COPY lab-config/go.sum go.sum
# Copy the controller dependency that's needed by go.mod replace directive
COPY core/controller/ core/controller/

# Fix the replace directive to point to the correct location in the container
RUN sed -i 's|../core/controller|./core/controller|g' go.mod

# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source from lab-config directory
COPY lab-config/cmd/main.go cmd/main.go
COPY lab-config/api/ api/
COPY lab-config/internal/ internal/

# Build
# the GOARCH has not a default value to allow the binary be built according to the host where the command
# was called. For example, if we call make docker-build in a local env which has the Apple Silicon M1 SO
# the docker BUILDPLATFORM arg will be linux/arm64 when for Apple x86 it will be linux/amd64. Therefore,
# by leaving it empty we can ensure that the container and binary shipped on it will have the same platform.
RUN CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} go build -a -o jumpstarter-lab-config cmd/main.go

FROM registry.access.redhat.com/ubi9/ubi-micro:9.5
WORKDIR /
COPY --from=builder /workspace/jumpstarter-lab-config .
USER 65532:65532

ENTRYPOINT ["/jumpstarter-lab-config"]
